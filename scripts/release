#!/bin/sh -eu

PROGNAME="$(basename $0)"
BASEDIR="$(cd $(dirname $0); pwd)"
PROJDIR="$(cd $BASEDIR/..; pwd)"

CURRENT=$(git describe --abbrev=0)
COMMIT=yes
BUILD_DIR=

help() {
    cat <<EOF >&2
USAGE:
  $PROGNAME (major|minor|patch)
  $PROGNAME -h | --help

OPTIONS:
  -h, --help

ARGUMENTS:
  major
    Update the major version.

  minor
    Update the minor version.

  patch
    Update the patch version.
EOF
    exit 0
}

log() {
  echo "$1" >&2
}

error() {
  log "ERROR: $1"
  exit 1
}

cleanup() {
  if [ -n "$BUILD_DIR" ]
  then
    rm -rf $BUILD_DIR
  fi
  find $PROJDIR -name '*.sed.backup' | xargs rm -f
}

while [ $# -gt 0 ]
do
  case "$1" in
    '-h' | '--help')
      help
      ;;
    '--no-commit')
      COMMIT=no
      shift
      ;;
    'major' | 'minor' | 'patch')
      break
      ;;
    *)
      help
      ;;
  esac
done

trap cleanup EXIT

VERSION=$(npx semver $CURRENT -i $1)

log "Pulling changes from origin..."
git pull

log "Bumping the version to $VERSION..."
sed -i'.sed.backup' -r \
  -e "s|^set\(MIRAKC_ARIB_VERSION .*|set\(MIRAKC_ARIB_VERSION \"$VERSION\"|" \
  $PROJDIR/CMakeLists.txt

# Make sure that cmake can generate project files successfully.
BUILD_DIR=$(mktemp -d)
cmake -S . -B $BUILD_DIR -D CMAKE_BUILD_TYPE=Release

# TODO: Genereate CHANGELOG.md

if [ "$COMMIT" = yes ]
then
  git add $PROJDIR/CMakeLists.txt
  git commit -m "misc: bump version to $VERSION"

  log "Making an annotated tag for $VERSION..."
  git tag -a "$VERSION" -m "release: $VERSION"
fi

cat <<EOF >&2
Done.

Run the following commands after confirmation:

  git push -u origin main
  git push origin $VERSION
EOF
